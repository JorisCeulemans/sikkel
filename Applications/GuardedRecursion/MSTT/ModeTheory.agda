--------------------------------------------------
-- Definition of the mode theory for guarded recursive type theory
--------------------------------------------------

module Applications.GuardedRecursion.MSTT.ModeTheory where

open import Model.Modality using (‚âÖ·µê-refl)

open import MSTT.Parameter.ModeTheory

open import Applications.GuardedRecursion.MSTT.ModeTheory.TwoCells

-- Re-exporting the expressions and equality tests of the mode theory.
open import Applications.GuardedRecursion.MSTT.ModeTheory.Expressions public
open import Applications.GuardedRecursion.MSTT.ModeTheory.Equivalence public using (_‚âümode_; _‚âÉ·µê?_)

GR-mode-theory : ModeTheory
ModeTheory.ModeExpr GR-mode-theory = ModeExpr
ModeTheory.show-mode GR-mode-theory = show-mode
ModeTheory.‚ü¶_‚üßmode GR-mode-theory = ‚ü¶_‚üßmode
ModeTheory._‚âümode_ GR-mode-theory = _‚âümode_
ModeTheory.ModalityExpr GR-mode-theory = ModalityExpr
ModeTheory.ùüô GR-mode-theory = ùüô
ModeTheory._‚ìú_ GR-mode-theory = _‚ìú_
ModeTheory.show-modality GR-mode-theory = show-modality
ModeTheory.‚ü¶_‚üßmodality GR-mode-theory = ‚ü¶_‚üßmodality
ModeTheory.ùüô-interpretation GR-mode-theory = ‚âÖ·µê-refl
ModeTheory.‚ìú-interpretation GR-mode-theory = Œª _ _ ‚Üí ‚âÖ·µê-refl
ModeTheory._‚âÉ·µê?_ GR-mode-theory = _‚âÉ·µê?_
ModeTheory.TwoCellExpr GR-mode-theory = TwoCellExpr
ModeTheory.id-cell GR-mode-theory = id-cell
ModeTheory.‚ü¶_‚àà_‚áí_‚üßtwo-cell GR-mode-theory = check-two-cell
