--------------------------------------------------
-- Lob induction and its properties
--------------------------------------------------

module Applications.GuardedRecursion.Model.Lob where

open import Data.Nat
open import Data.Nat.Properties
open import Data.Unit
open import Function using (_โ_)
open import Relation.Binary.PropositionalEquality hiding ([_])

open import Model.BaseCategory
open import Model.CwF-Structure
open import Model.Type.Function
open import Model.DRA
open import Applications.GuardedRecursion.Model.Modalities.Later

private
  variable
    m n : โ
    ฮ ฮ ฮ : Ctx ฯ


--------------------------------------------------
-- Definition of Lรถb induction and proofs of some of its properties

lรถb : (T : Ty ฮ) โ Tm ฮ (โป' T โ T) โ Tm ฮ T
lรถb {ฮ = ฮ} T f = MkTm tm nat
  where
    tm : (n : โ) (ฮณ : ฮ โจ n โฉ) โ T โจ n , ฮณ โฉ
    tm zero    ฮณ = f โฌโจ zero , ฮณ โฉ tt
    tm (suc n) ฮณ = f โฌโจ suc n , ฮณ โฉ tm n (ฮ โช nโค1+n n โซ ฮณ)

    open โก-Reasoning
    nat : โ {m n} {ฮณn : ฮ โจ n โฉ} {ฮณm : ฮ โจ m โฉ} (mโคn : m โค n) (eฮณ : ฮ โช mโคn โซ ฮณn โก ฮณm) โ
          T โช mโคn , eฮณ โซ tm n ฮณn โก tm m ฮณm
    nat {m = .zero} {n = zero}  zโคn _ = โฌ-natural f
    nat {m = .zero} {n = suc n} zโคn _ = โฌ-natural f
    nat {m = suc m} {n = suc n} {ฮณ} {ฮณ'} (sโคs mโคn) eฮณ =
      begin
        T โช sโคs mโคn , eฮณ โซ f โฌโจ suc n , ฮณ โฉ (tm n (ฮ โช nโค1+n n โซ ฮณ))
      โกโจ โฌ-natural f โฉ
        f โฌโจ suc m , ฮณ' โฉ (T โช mโคn , _ โซ (tm n (ฮ โช nโค1+n n โซ ฮณ)))
      โกโจ cong (f โฌโจ _ , _ โฉ_) (nat mโคn _) โฉ
        f โฌโจ suc m , ฮณ' โฉ (tm m (ฮ โช nโค1+n m โซ ฮณ')) โ

lรถb' : (T : Ty ฮ) โ Tm (ฮ ,, โป' T) (T [ ฯ ]) โ Tm ฮ T
lรถb' T f = lรถb T (lam (โป' T) f)

lรถb-is-fixpoint : {T : Ty ฮ} (f : Tm ฮ (โป' T โ T)) โ
                  app f (next' (lรถb T f)) โแตแต lรถb T f
eq (lรถb-is-fixpoint f) {zero}  ฮณ = refl
eq (lรถb-is-fixpoint f) {suc n} ฮณ = refl

fixpoint-unique : {T : Ty ฮ} (f  : Tm ฮ (โป' T โ T)) (t s : Tm ฮ T) โ
                  app f (next' t) โแตแต t โ app f (next' s) โแตแต s โ t โแตแต s
eq (fixpoint-unique f t s t-fix s-fix) {x = zero}  ฮณ =
  begin
    t โจ zero , ฮณ โฉ'
  โกโจ eq t-fix ฮณ โจ
    f โฌโจ zero , ฮณ โฉ tt
  โกโจ eq s-fix ฮณ โฉ
    s โจ zero , ฮณ โฉ' โ
  where open โก-Reasoning
eq (fixpoint-unique f t s t-fix s-fix) {x = suc n} ฮณ =
  begin
    t โจ suc n , ฮณ โฉ'
  โกโจ eq t-fix ฮณ โจ
    f โฌโจ suc n , ฮณ โฉ (t โจ n , _ โฉ')
  โกโจ cong (f โฌโจ suc n , ฮณ โฉ_) (eq (fixpoint-unique f t s t-fix s-fix) {x = n}  _) โฉ
    f โฌโจ suc n , ฮณ โฉ (s โจ n , _ โฉ')
  โกโจ eq s-fix ฮณ โฉ
    s โจ suc n , ฮณ โฉ' โ
  where open โก-Reasoning

lรถb'-ฮฒ : {T : Ty ฮ} {t : Tm (ฮ ,, โป' T) (T [ ฯ ])} โ
         ฮนโปยน[ ty-weaken-subst _ ] (t [ next' (lรถb' T t) /v ]') โแตแต lรถb' T t
lรถb'-ฮฒ {T = T} {t = t} =
  begin
    ฮนโปยน[ ty-weaken-subst _ ] (t [ next' (lรถb' T t) /v ]')
  โโจ โ-ฮฒ t _ โจ
    app (lam (โป' T) t) (next' (lรถb' T t))
  โโจ lรถb-is-fixpoint _ โฉ
    lรถb' T t โ
  where open โแตแต-Reasoning

lรถb-cong : (T : Ty ฮ) {f f' : Tm ฮ (โป' T โ T)} โ f โแตแต f' โ lรถb T f โแตแต lรถb T f'
eq (lรถb-cong T f=f') {zero} ฮณ = cong (_$โจ zโคn , _ โฉ tt) (eq f=f' ฮณ)
eq (lรถb-cong T f=f') {suc n} _ = โฌ-cong f=f' (eq (lรถb-cong T f=f') {n} _)

lรถb'-cong : (T : Ty ฮ) {t t' : Tm (ฮ ,, โป' T) (T [ ฯ ])} โ t โแตแต t' โ lรถb' T t โแตแต lรถb' T t'
lรถb'-cong T ๐ = lรถb-cong T (lam-cong (โป' T) ๐)


lรถb-ฮน : {T : Ty ฮ} {T' : Ty ฮ} {T=T' : T โแตสธ T'} (f : Tm ฮ (โป' T' โ T')) โ
        ฮน[ T=T' ] (lรถb T' f) โแตแต lรถb T (ฮน[ โ-cong (โป'-cong T=T') T=T' ] f)
eq (lรถb-ฮน f) {zero} _ = refl
eq (lรถb-ฮน {ฮ = ฮ}{T = T}{T' = T'}{T=T' = T=T'} f) {suc n} ฮณ = cong (func (to T=T')) (โฌ-cong (reflแตแต {t = f}) (
  begin
    lรถb T' f โจ n , _ โฉ'
  โกโจ eq (isoสณ T=T') _ โจ
    func (from T=T') (func (to T=T') (lรถb T' f โจ n , _ โฉ'))
  โกโจ cong (func (from T=T')) (eq (lรถb-ฮน f) {n} _) โฉ
    func (from T=T') (lรถb T g โจ n , _ โฉ') โ))
  where
    open โก-Reasoning
    g : Tm ฮ (โป' T โ T)
    g = ฮน[ โ-cong (โป'-cong T=T') T=T' ] f

lรถb'-ฮน : {T T' : Ty ฮ} {e : T โแตสธ T'} {t : Tm (ฮ ,, โป' T') (T' [ ฯ ])} โ
         ฮน[ e ] (lรถb' T' t)
           โแตแต
         lรถb' T (ฮน[ ty-subst-cong-ty ฯ e ] (ฮนโปยน[ ty-subst-cong-subst-2-1 T' (,,-map-ฯ _) ] (ฮนc[ ,,-cong (โป'-cong e) ]' t)))
lรถb'-ฮน = transแตแต (lรถb-ฮน _) (lรถb-cong _ (transแตแต (lam-ฮน _) (lam-cong _ (record { eq = ฮป _ โ refl }))))


module _ {ฮ ฮ : Ctx ฯ} (ฯ : ฮ โ ฮ) {T : Ty ฮ} where
  lรถb-natural : (f : Tm ฮ (โป' T โ T)) โ
                (lรถb T f) [ ฯ ]' โแตแต lรถb (T [ ฯ ]) (ฮนโปยน[ โ-cong (โป'-natural ฯ) reflแตสธ ] (ฮนโปยน[ โ-natural ฯ ] (f [ ฯ ]')))
  eq (lรถb-natural f) {zero} ฮด = $-cong (f โจ 0 , func ฯ ฮด โฉ') refl
  eq (lรถb-natural f) {suc n} ฮด =
    begin
      f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ctx-id ฮ โฉ (lรถb T f โจ n , ฮ โช nโค1+n n โซ (func ฯ ฮด) โฉ')
    โกโจ $-cong (f โจ suc n , func ฯ ฮด โฉ') refl โฉ
      f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ฮฑ โฉ (lรถb T f โจ n , ฮ โช nโค1+n n โซ (func ฯ ฮด) โฉ')
    โกโจ cong (f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ฮฑ โฉ_) (Tm.naturality (lรถb T f) โค-refl ฮฒ) โจ
      f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ฮฑ โฉ (T โช โค-refl , ฮฒ โซ ((lรถb T f) [ ฯ ]' โจ n , ฮ โช nโค1+n n โซ ฮด โฉ'))
    โกโจ cong (f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ฮฑ โฉ_ โ T โช โค-refl , ฮฒ โซ_) (eq (lรถb-natural f) {n} (ฮ โช nโค1+n n โซ ฮด)) โฉ
      f โจ suc n , func ฯ ฮด โฉ' $โจ sโคs โค-refl , ฮฑ โฉ (T โช โค-refl , ฮฒ โซ (lรถb (T [ ฯ ]) g โจ n , ฮ โช nโค1+n n โซ ฮด โฉ')) โ
    where
      open โก-Reasoning
      ฮฑ = _
      ฮฒ = _
      g : Tm ฮ (โป' (T [ ฯ ]) โ (T [ ฯ ]))
      g = ฮนโปยน[ โ-cong (โป'-natural ฯ) reflแตสธ ] (ฮนโปยน[ โ-natural ฯ ] (f [ ฯ ]'))

  lรถb'-natural : (t : Tm (ฮ ,, โป' T) (T [ ฯ ])) โ
                 (lรถb' T t) [ ฯ ]'
                   โแตแต
                 lรถb' (T [ ฯ ]) (ฮนโปยน[ transแตสธ (ty-subst-cong-ty _ (ty-subst-cong-subst-2-2 T (โน-ฯ-comm ฯ))) (ty-subst-cong-subst-2-1 _ (,,-map-ฯ _)) ]
                                 ฮนcโปยน[ ,,-cong (โป'-natural ฯ) ]'
                                 (t [ ฯ โน ]'))
  lรถb'-natural t =
    transแตแต (lรถb-natural _) (lรถb-cong _ (
    transแตแต (ฮนโปยน-cong (ฮนโปยน-cong (lam-natural ฯ t))) (
    transแตแต (ฮนโปยน-cong ฮน-symหก) (
    transแตแต (lam-ฮนโปยน _) (
    lam-cong _ (record { eq = ฮป _ โ refl }))))))


--------------------------------------------------
-- Lรถb induction with closed types

module _ {A : ClosedTy ฯ} (clA : IsClosedNatural A) where
  lรถb-cl : Tm (ฮ ,, โป A) A โ Tm ฮ A
  lรถb-cl a = lรถb' A (ฮน[ transแตสธ (closed-natural clA _) (symแตสธ (closed-natural clA _)) ]
                    (ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))

  lรถb-cl-ฮฒ : (a : Tm (ฮ ,, โป A) A) โ lรถb-cl a โแตแต a [ clA โฃ next-cl clA (lรถb-cl a) /clโจ dra-closed later clA โฉ ]cl
  lรถb-cl-ฮฒ a =
    begin
      lรถb' A (ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _))]
             (ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))
    โโจ lรถb'-ฮฒ โจ
      ฮนโปยน[ ty-weaken-subst _ ]
          ((ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _)) ]
           (ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))
        [ next' (lรถb-cl a) /v ]')
    โโจ ฮนโปยน-cong ฮน-subst-commute โจ
      ฮนโปยน[ ty-weaken-subst _ ]
      (ฮน[ ty-subst-cong-ty (next' (lรถb-cl a) /v) (transแตสธ (closed-natural clA ฯ)
                                                          (symแตสธ (closed-natural clA _))) ]
      ((ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a)
      [ next' (lรถb-cl a) /v ]'))
    โโจ ฮนโปยน-cong (ฮน-cong (tm-subst-cong-subst-2-1 a (,,-cong-/v (closed-ty-eq (cl-โป'-โป clA)) _))) โฉ
      ฮนโปยน[ ty-weaken-subst _ ]
      (ฮน[ ty-subst-cong-ty (next' (lรถb-cl a) /v) (transแตสธ (closed-natural clA ฯ)
                                                          (symแตสธ (closed-natural clA _))) ]
      (ฮน[ ty-subst-cong-subst-2-1 A (,,-cong-/v (closed-ty-eq (cl-โป'-โป clA)) (next' (lรถb-cl a))) ]
      (a [ next-cl clA (lรถb-cl a) /v ]')))
    โโจ ฮนโปยน-cong (transแตแต (transแตแต (ฮน-congแต ty-subst-cong-ty-trans) ฮน-trans) (ฮน-cong (ฮน-congแต-2-2
       (transแต (transแตสธ-congหก ty-subst-cong-ty-sym) (move-symแตสธ-out (symแต (closed-substs-eq-2-1 clA _))))))) โฉ
      ฮนโปยน[ ty-weaken-subst _ ]
      (ฮน[ ty-subst-cong-ty (next' (lรถb-cl a) /v) (closed-natural clA ฯ) ]
      (ฮน[ closed-natural clA (next' (lรถb-cl a) /v) ]
      (ฮนโปยน[ closed-natural clA (next-cl clA (lรถb-cl a) /v) ]
      (a [ next-cl clA (lรถb-cl a) /v ]'))))
    โโจ ฮนโปยน-cong (ฮน-congแต-2-2 (closed-โ clA _ _)) โฉ
      ฮนโปยน[ ty-weaken-subst (next' (lรถb-cl a)) ]
      (ฮน[ ty-subst-comp A ฯ (next' (lรถb-cl a) /v) ]
      (ฮน[ closed-natural clA (ฯ โ (next' (lรถb-cl a) /v)) ]
      (ฮนโปยน[ closed-natural clA (next-cl clA (lรถb-cl a) /v) ]
      (a [ next-cl clA (lรถb-cl a) /v ]'))))
    โโจ transแตแต ฮนโปยน-trans (ฮนโปยน-cong (transแตแต ฮนโปยน-trans (ฮนโปยน-cong ฮน-symหก))) โฉ
      ฮนโปยน[ ty-subst-id A ]
      (ฮนโปยน[ ty-subst-cong-subst (ctx-ext-subst-ฮฒโ (id-subst _) (next' (lรถb-cl a) [ id-subst _ ]')) A ]
      (ฮน[ closed-natural clA (ฯ โ (next' (lรถb-cl a) /v)) ]
      (ฮนโปยน[ closed-natural clA (next-cl clA (lรถb-cl a) /v) ]
      (a [ next-cl clA (lรถb-cl a) /v ]'))))
    โโจ ฮนโปยน-cong (transแตแต (ฮน-congแต (symแต ty-subst-cong-subst-sym)) (ฮน-congแต-2-1 (closed-subst-eq clA _))) โฉ
      ฮนโปยน[ ty-subst-id A ]
      (ฮน[ closed-natural clA (id-subst _) ]
      (ฮนโปยน[ closed-natural clA (next-cl clA (lรถb-cl a) /v) ]
      (a [ next-cl clA (lรถb-cl a) /v ]')))
    โโจ ฮน-congแต-2-0 (transแต (transแตสธ-congสณ (closed-id clA)) symแตสธ-invหก) โฉ
      ฮนโปยน[ closed-natural clA (next-cl clA (lรถb-cl a) /v) ]
      (a [ next-cl clA (lรถb-cl a) /v ]')
    โโจโฉ
      a [ clA โฃ next-cl clA (lรถb-cl a) /v ]cl
    โโจ cl-tm-subst-cong-subst clA (/v-/cl (dra-closed later clA) (next-cl clA (lรถb-cl a))) โฉ
      a [ clA โฃ next-cl clA (lรถb-cl a) /clโจ dra-closed later clA โฉ ]cl โ
    where open โแตแต-Reasoning

  lรถb-cl-natural : (a : Tm (ฮ ,, โป A) A) (ฯ : ฮ โ ฮ) โ
                   (lรถb-cl a) [ clA โฃ ฯ ]cl โแตแต lรถb-cl (a [ clA โฃ lift-cl-subst (dra-closed later clA) ฯ ]cl)
  lรถb-cl-natural a ฯ =
    begin
      ฮนโปยน[ closed-natural clA ฯ ] (
      lรถb' A (ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _)) ] (
              ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))
      [ ฯ ]')
    โโจ ฮนโปยน-cong (lรถb'-natural ฯ _) โฉ
      ฮนโปยน[ closed-natural clA ฯ ]
      lรถb' (A [ ฯ ]) (ฮนโปยน[ transแตสธ (ty-subst-cong-ty (,,-map (to (โป'-natural ฯ))) (ty-subst-cong-subst-2-2 A (โน-ฯ-comm ฯ)))
                                   (ty-subst-cong-subst-2-1 (A [ ฯ ]) (,,-map-ฯ (to (โป'-natural ฯ)))) ] (
                      ฮนcโปยน[ ,,-cong (โป'-natural ฯ) ]' ((
                          ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _)) ] (
                          ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))
                        [ ฯ โน ]')))
    โโจ lรถb'-ฮน โฉ
      lรถb' A (ฮน[ ty-subst-cong-ty ฯ (symแตสธ (closed-natural clA ฯ)) ] (
              ฮนโปยน[ ty-subst-cong-subst-2-1 (A [ ฯ ]) (,,-map-ฯ (from (โป'-cong (symแตสธ (closed-natural clA ฯ))))) ] (
              ฮนc[ ,,-cong (โป'-cong (symแตสธ (closed-natural clA ฯ))) ]' (
              ฮนโปยน[ transแตสธ (ty-subst-cong-ty (,,-map (to (โป'-natural ฯ))) (ty-subst-cong-subst-2-2 A (โน-ฯ-comm ฯ)))
                           (ty-subst-cong-subst-2-1 (A [ ฯ ]) (,,-map-ฯ (to (โป'-natural ฯ)))) ] (
              ฮนcโปยน[ ,,-cong (โป'-natural ฯ) ]' ((
                  ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _)) ] (
                  ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' a))
                [ ฯ โน ]'))))))
    โโจ lรถb'-cong A proof-details โฉ
      lรถb' A (ฮน[ transแตสธ (closed-natural clA ฯ) (symแตสธ (closed-natural clA _)) ] (
              ฮนc[ ,,-cong (closed-ty-eq (cl-โป'-โป clA)) ]' (
              ฮนโปยน[ closed-natural clA (lift-cl-subst (dra-closed later clA) ฯ) ] (
              a [ lift-cl-subst (dra-closed later clA) ฯ ]')))) โ
    where
      open โแตแต-Reasoning
      proof-details : _
      proof-details =
        transแตแต (ฮน-cong (ฮนโปยน-cong (tm-subst-cong-tm _ (ฮนโปยน-cong (tm-subst-cong-tm _ (
          transแตแต (tm-subst-cong-tm _ ฮน-trans)
                  (move-ฮนโปยน-right (symแตแต (tm-subst-cong-subst-2-1 _ (symหข (lift-cl-subst-โน (โป'-closed clA) ฯ))))))))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (tm-subst-cong-tm _ (ฮนโปยน-cong (tm-subst-cong-tm _ (
          transแตแต (ฮนโปยน-cong
            (transแตแต (tm-subst-cong-tm _ (symแตแต ฮน-subst-commute)) (symแตแต ฮน-subst-commute)))
            (ฮน-congแต-2-2 (move-symแตสธ-out (symแต (ty-subst-cong-subst-2-1-natural _ _)))))))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (tm-subst-cong-tm _ (transแตแต ฮนโปยน-trans (ฮนโปยน-cong ฮนโปยน-subst-commute))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (transแตแต (symแตแต ฮนโปยน-subst-commute) (ฮนโปยน-cong (tm-subst-cong-subst-2-1 _ (symหข (,,-map-comp _ _))))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (ฮนโปยน-cong (ฮน-cong (
          transแตแต (symแตแต ฮนโปยน-subst-commute) (ฮนโปยน-cong (
          transแตแต (symแตแต ฮน-subst-commute) (ฮน-cong (
          transแตแต (symแตแต ฮน-subst-commute) (ฮน-cong (
          tm-subst-cong-subst-2-0 _ (
            transหข (symหข (,,-map-comp _ _)) (
            transหข (,,-map-cong (transโฟ โ-assoc (transโฟ (โ-congสณ (transโฟ (symโฟ โ-assoc) (transโฟ (โ-congหก (isoสณ (โป'-natural ฯ))) id-trans-unitหก)))
                                                        (isoสณ (โป'-cong (closed-natural clA ฯ))))))
            ,,-map-id))))))))))))) (
        transแตแต (ฮน-cong (transแตแต (symแตแต ฮนโปยน-trans) (ฮน-congแต-2-1 {R=T = symแตสธ (ty-subst-cong-subst-2-1 _ (,,-map-ฯ _))}
                  (record { from-eq = record { eq = ฮป _ โ trans (sym (ty-comp A)) (trans (sym (ty-comp A)) (ty-cong A (โค-irrelevant _ _))) } })))) (
        transแตแต (symแตแต (ฮน-symสณ {T=S = closed-natural clA ฯ})) (
        transแตแต (ฮน-cong (transแตแต (ฮน-cong (ฮน-congแต ty-subst-cong-ty-sym)) (
        transแตแต (transแตแต (ฮนโปยน-cong (ฮนโปยน-congแต-2-2 (ty-subst-cong-subst-2-1-natural _ _))) (ฮนโปยน-congแต-2-2 (symแต (closed-substs-eq-2-1 clA _)))) (
        transแตแต (ฮนโปยน-cong (transแตแต (symแตแต ฮนโปยน-trans) (ฮนโปยน-congแต-2-2 (transแต (transแตสธ-congสณ (symแต ty-subst-cong-ty-trans)) (transแต (symแต ty-subst-cong-ty-trans) (
                          transแต (ty-subst-cong-ty-cong (symแต (closed-substs-eq-2-2 clA _)) _) ty-subst-cong-ty-trans)))))) (
        transแตแต (ฮนโปยน-cong (ฮนโปยน-cong ฮน-symหก)) (
        transแตแต (ฮนโปยน-cong (transแตแต (ฮนโปยน-cong (ฮน-congแต ty-subst-cong-ty-sym)) (ฮนโปยน-congแต-2-2 (
                          transแต (symแต ty-subst-cong-ty-trans) (transแต (ty-subst-cong-ty-cong (symแต (closed-substs-eq-2-1 clA _)) _) ty-subst-cong-ty-trans))))) (
        transแตแต (ฮนโปยน-cong (ฮนโปยน-cong (transแตแต (ฮน-congแต (transแต (symแต ty-subst-cong-ty-sym) (ty-subst-cong-ty-cong (symแต ty-subst-cong-ty-sym) _)))
                                    (transแตแต (ฮน-congแต-2-2 (symแต (ty-subst-cong-subst-2-0-natural _ _)))
                                    (symแตแต (ฮน-congแต-2-1 (closed-substs-eq-2-0 clA _))))))) (
        transแตแต (ฮนโปยน-cong ฮน-symหก) ฮน-symหก)))))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (symแตแต ฮนโปยน-subst-commute))) (
        transแตแต (transแตแต (ฮน-cong (transแตแต (symแตแต ฮนโปยน-trans) (ฮนโปยน-congแต (closed-substs-eq-2-2 clA _)))) (
                 transแตแต (ฮน-cong (transแตแต ฮนโปยน-trans ฮนโปยน-trans)) (
                 transแตแต (symแตแต ฮน-trans) (
                 ฮน-cong (ฮนโปยน-cong (ฮน-congแต (symแต (ty-subst-cong-subst-2-2-sym A)))))))) (
        transแตแต (ฮน-cong (ฮนโปยน-cong (symแตแต (tm-subst-cong-subst-2-2 a (symหข (lift-cl-,,-cong-commute (cl-โป'-โป clA) ฯ)))))) (
        ฮน-cong ฮนโปยน-subst-commute)))))))))))

  lรถb-cl-cong : {a a' : Tm (ฮ ,, โป A) A} โ a โแตแต a' โ lรถb-cl a โแตแต lรถb-cl a'
  lรถb-cl-cong ๐ = lรถb'-cong A (ฮน-cong (ฮนc'-cong (,,-cong (dra-cong later (closed-natural clA (from-earlier _)))) ๐))
