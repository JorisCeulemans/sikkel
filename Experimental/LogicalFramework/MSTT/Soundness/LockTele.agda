open import Experimental.LogicalFramework.MSTT.Parameter.ModeTheory
open import Experimental.LogicalFramework.MSTT.Parameter.TypeExtension
open import Experimental.LogicalFramework.MSTT.Parameter.TermExtension

module Experimental.LogicalFramework.MSTT.Soundness.LockTele
  (โณ : ModeTheory) (๐ฏ : TyExt โณ) (๐ : TmExt โณ ๐ฏ)
  where

import Relation.Binary.PropositionalEquality as Ag

open import Model.CwF-Structure as M renaming (Ctx to SemCtx; Ty to SemTy; Tm to SemTm) using ()
open import Model.DRA as DRA hiding
  (โจ_โฃ_โฉ; ๐; _,lockโจ_โฉ; lock-fmap; lock-fmap-cong; lock-fmap-id; lock-fmap-โ
  ; TwoCell; id-cell; _โฃ-vert_; _โฃ-hor_; key-subst; key-subst-natural; key-subst-eq)

open ModeTheory โณ
open import Experimental.LogicalFramework.MSTT.Syntax โณ ๐ฏ ๐

private variable
  m n o p : Mode


โฆeq-cell-++หกแต-locksโง : (ฮผ : Modality m p) (ฮ : LockTele m n) {ฮ : LockTele n o} โ
                       โฆ eq-cell (++หกแต-locks (lockโจ ฮผ โฉ, ฮ) {ฮ}) โงtwo-cell
                         DRA.โแตแถ
                       โฆ id-cell โฃ-hor eq-cell (++หกแต-locks ฮ) โงtwo-cell DRA.โฃ-vert โฆ eq-cell (mod-assoc (locksหกแต ฮ)) โงtwo-cell
โฆeq-cell-++หกแต-locksโง ฮผ ฮ {ฮ} =
  begin
    โฆ eq-cell (Ag.trans (mod-assoc (locksหกแต ฮ)) (Ag.cong (ฮผ โ_) (++หกแต-locks ฮ))) โงtwo-cell
  โโจ โฆeq-cell-transโง (mod-assoc (locksหกแต ฮ)) _ โฉ
    โฆ eq-cell (Ag.cong (ฮผ โ_) (++หกแต-locks ฮ)) โงtwo-cell DRA.โฃ-vert โฆ eq-cell (mod-assoc (locksหกแต ฮ)) โงtwo-cell
  โโจ DRA.โฃ-vert-congหก (โฆeq-cell-whisker-leftโง ฮผ (++หกแต-locks ฮ)) โฉ
    โฆ id-cell โฃ-hor eq-cell (++หกแต-locks ฮ) โงtwo-cell DRA.โฃ-vert โฆ eq-cell (mod-assoc (locksหกแต ฮ)) โงtwo-cell โ
  where open DRA.โแตแถ-Reasoning

sym-trans : โ {โ} {A : Set โ} {x y z : A} (e : x Ag.โก y) {e' : y Ag.โก z} โ
            Ag.sym (Ag.trans e e') Ag.โก Ag.trans (Ag.sym e') (Ag.sym e)
sym-trans Ag.refl {Ag.refl} = Ag.refl

-- We could prove this from โฆeq-cell-++หกแต-locksโง but proving it directly is easier.
โฆeq-cell-++หกแต-sym-locksโง : (ฮผ : Modality m p) (ฮ : LockTele m n) {ฮ : LockTele n o} โ
                           โฆ eq-cell (Ag.sym (++หกแต-locks (lockโจ ฮผ โฉ, ฮ) {ฮ})) โงtwo-cell
                             DRA.โแตแถ
                           โฆ eq-cell (Ag.sym (mod-assoc (locksหกแต ฮ))) โงtwo-cell DRA.โฃ-vert โฆ id-cell โฃ-hor eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell
โฆeq-cell-++หกแต-sym-locksโง ฮผ ฮ {ฮ} =
  begin
    โฆ eq-cell (Ag.sym (Ag.trans (mod-assoc (locksหกแต ฮ)) (Ag.cong (ฮผ โ_) (++หกแต-locks ฮ)))) โงtwo-cell
  โโจ Ag.subst (ฮป e โ โฆ eq-cell (Ag.sym (Ag.trans (mod-assoc (locksหกแต ฮ)) (Ag.cong (ฮผ โ_) (++หกแต-locks ฮ)))) โงtwo-cell DRA.โแตแถ โฆ eq-cell e โงtwo-cell)
              {Ag.sym (Ag.trans (mod-assoc (locksหกแต ฮ)) (Ag.cong (ฮผ โ_) (++หกแต-locks ฮ)))}
              (Ag.trans (sym-trans (mod-assoc (locksหกแต ฮ))) (Ag.cong (ฮป x โ Ag.trans x (Ag.sym (mod-assoc (locksหกแต ฮ)))) (Ag.sym-cong (++หกแต-locks ฮ))))
              DRA.reflแตแถ โฉ
    โฆ eq-cell (Ag.trans (Ag.cong (ฮผ โ_) (Ag.sym (++หกแต-locks ฮ))) (Ag.sym (mod-assoc (locksหกแต ฮ)))) โงtwo-cell
  โโจ โฆeq-cell-transโง (Ag.cong (ฮผ โ_) (Ag.sym (++หกแต-locks ฮ))) _ โฉ
    โฆ eq-cell (Ag.sym (mod-assoc (locksหกแต ฮ))) โงtwo-cell DRA.โฃ-vert โฆ eq-cell (Ag.cong (ฮผ โ_) (Ag.sym (++หกแต-locks ฮ))) โงtwo-cell
  โโจ DRA.โฃ-vert-congสณ (โฆeq-cell-whisker-leftโง ฮผ (Ag.sym (++หกแต-locks ฮ))) โฉ
    โฆ eq-cell (Ag.sym (mod-assoc (locksหกแต ฮ))) โงtwo-cell DRA.โฃ-vert โฆ id-cell โฃ-hor eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell โ
  where open DRA.โแตแถ-Reasoning


whiskerหกแต-right-sound : (ฮ ฮจ : LockTele m n) {ฮ : LockTele n o} (ฮฑ : TwoCell (locksหกแต ฮ) (locksหกแต ฮจ)) โ
                        โฆ eq-cell (++หกแต-locks ฮจ {ฮ}) โงtwo-cell
                        DRA.โฃ-vert (to (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ))
                        DRA.โฃ-vert ((โฆ ฮฑ โงtwo-cell DRA.โฃ-hor DRA.id-cell)
                        DRA.โฃ-vert (from (โฆโโง-sound (locksหกแต ฮ) (locksหกแต ฮ))
                        DRA.โฃ-vert โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell)))
                          DRA.โแตแถ
                        โฆ whiskerหกแต-right ฮ ฮจ ฮฑ โงtwo-cell
whiskerหกแต-right-sound ฮ ฮจ {ฮ} ฮฑ =
  begin
    โฆ eq-cell (++หกแต-locks ฮจ) โงtwo-cell
    DRA.โฃ-vert (to (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ))
    DRA.โฃ-vert ((โฆ ฮฑ โงtwo-cell DRA.โฃ-hor DRA.id-cell)
    DRA.โฃ-vert (from (โฆโโง-sound (locksหกแต ฮ) (locksหกแต ฮ))
    DRA.โฃ-vert โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell)))
  โโจ DRA.โฃ-vert-congสณ (DRA.โฃ-vert-congสณ (transแตแถ DRA.โฃ-vert-assoc (DRA.โฃ-vert-congหก (DRA.โฃ-hor-congสณ โฆid-cellโง-sound)))) โจ
    โฆ eq-cell (++หกแต-locks ฮจ) โงtwo-cell
    DRA.โฃ-vert (to (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ))
    DRA.โฃ-vert (((โฆ ฮฑ โงtwo-cell DRA.โฃ-hor โฆ id-cell {ฮผ = locksหกแต ฮ} โงtwo-cell) DRA.โฃ-vert from (โฆโโง-sound (locksหกแต ฮ) (locksหกแต ฮ)))
    DRA.โฃ-vert โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell))
  โโจ DRA.โฃ-vert-congสณ (DRA.โฃ-vert-congสณ (DRA.โฃ-vert-congหก (โฆโโง-sound-natural ฮฑ id-cell))) โจ
    โฆ eq-cell (++หกแต-locks ฮจ) โงtwo-cell
    DRA.โฃ-vert (to (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ))
    DRA.โฃ-vert ((from (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ)) DRA.โฃ-vert โฆ ฮฑ โฃ-hor id-cell {ฮผ = locksหกแต ฮ} โงtwo-cell)
    DRA.โฃ-vert โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell))
  โโจ DRA.โฃ-vert-congสณ (transแตแถ (symแตแถ DRA.โฃ-vert-assoc) (DRA.โฃ-vert-congหก (
       transแตแถ (transแตแถ (symแตแถ DRA.โฃ-vert-assoc) (DRA.โฃ-vert-congหก (isoหก (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ))))) DRA.โฃ-vert-unitหก))) โฉ
    โฆ eq-cell (++หกแต-locks ฮจ) โงtwo-cell
    DRA.โฃ-vert (โฆ ฮฑ โฃ-hor id-cell {ฮผ = locksหกแต ฮ} โงtwo-cell
    DRA.โฃ-vert โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell)
  โโจ DRA.โฃ-vert-congสณ (โฆโฃ-vertโง-sound _ _) โจ
    โฆ eq-cell (++หกแต-locks ฮจ) โงtwo-cell
    DRA.โฃ-vert โฆ (ฮฑ โฃ-hor id-cell {ฮผ = locksหกแต ฮ}) โฃ-vert eq-cell (Ag.sym (++หกแต-locks ฮ))โงtwo-cell
  โโจ โฆโฃ-vertโง-sound _ _ โจ
    โฆ eq-cell (++หกแต-locks ฮจ) โฃ-vert ((ฮฑ โฃ-hor id-cell {ฮผ = locksหกแต ฮ}) โฃ-vert eq-cell (Ag.sym (++หกแต-locks ฮ))) โงtwo-cell โ
  where open DRA.โแตแถ-Reasoning

whiskerหกแต-right-sound-key : (ฮ ฮจ : LockTele m n) {ฮ : LockTele n o} (ฮฑ : TwoCell (locksหกแต ฮ) (locksหกแต ฮจ)) {ฮ : SemCtx โฆ m โงmode} โ
                            DRA.key-subst โฆ eq-cell (Ag.sym (++หกแต-locks ฮ)) โงtwo-cell {ฮ}
                            M.โ DRA.key-subst (from (โฆโโง-sound (locksหกแต ฮ) (locksหกแต ฮ)))
                            M.โ DRA.lock-fmap โฆ locksหกแต ฮ โงmod (DRA.key-subst โฆ ฮฑ โงtwo-cell)
                            M.โ DRA.key-subst (to (โฆโโง-sound (locksหกแต ฮจ) (locksหกแต ฮ)))
                            M.โ DRA.key-subst โฆ eq-cell (++หกแต-locks ฮจ {ฮ}) โงtwo-cell
                              M.โหข
                            DRA.key-subst โฆ whiskerหกแต-right ฮ ฮจ ฮฑ โงtwo-cell
whiskerหกแต-right-sound-key ฮ ฮจ ฮฑ =
  M.transหข (M.โ-congหก (M.โ-congหก (M.โ-congสณ (M.symหข (M.id-subst-unitหก _))))) (DRA.key-subst-eq (whiskerหกแต-right-sound ฮ ฮจ ฮฑ))
