module Experimental.ClosedTypes.Modal where

open import Model.BaseCategory
open import Model.CwF-Structure.Context
open import Model.CwF-Structure.Type
open import Model.CwF-Structure.Term
open import Model.Modality

open import Experimental.ClosedTypes


private variable
  C D E : BaseCategory


sРЪе_РѕБ_РЪЕ : Modality C D Рєњ ClosedTy C Рєњ ClosedTy D
sРЪе ╬╝ РѕБ T РЪЕ = РЪе ╬╝ РѕБ T [ !РЌЄ _ ] РЪЕ

module _ (╬╝ : Modality C D) where
  smod-cong : {T S : ClosedTy C} Рєњ
              T РЅЁрхЌ╩И S Рєњ sРЪе ╬╝ РѕБ T РЪЕ РЅЁрхЌ╩И sРЪе ╬╝ РѕБ S РЪЕ
  smod-cong T=S = mod-cong ╬╝ (ty-subst-cong-ty _ T=S)

  smod-intro : {╬Њ : Ctx D} {T : ClosedTy C} Рєњ SimpleTm (lock ╬╝ ╬Њ) T Рєњ SimpleTm ╬Њ sРЪе ╬╝ РѕБ T РЪЕ
  smod-intro t = ╬╣[ mod-natural ╬╝ _ ] mod-intro ╬╝ (╬╣[ РЅЁрхЌ╩И-trans (ty-subst-comp _ _ _) (ty-subst-cong-subst (РЌЄ-terminal _ _ _) _) ] t)

  smod-elim : {╬Њ : Ctx D} {T : ClosedTy C} Рєњ SimpleTm ╬Њ sРЪе ╬╝ РѕБ T РЪЕ Рєњ SimpleTm (lock ╬╝ ╬Њ) T
  smod-elim t = mod-elim ╬╝ (
    ╬╣[ РЅЁрхЌ╩И-trans (mod-cong ╬╝ (РЅЁрхЌ╩И-trans (ty-subst-cong-subst (РЌЄ-terminal _ _ _) _) (РЅЁрхЌ╩И-sym (ty-subst-comp _ _ _)))) (РЅЁрхЌ╩И-sym (mod-natural ╬╝ _)) ] t)

sРЪе­ЮЪЎРѕБ-РЪЕ : {T : ClosedTy C} Рєњ sРЪе ­ЮЪЎ РѕБ T РЪЕ РЅЁрхЌ╩И T
sРЪе­ЮЪЎРѕБ-РЪЕ = РЅЁрхЌ╩И-trans (ty-subst-cong-subst (РЌЄ-terminal _ _ _) _) (ty-subst-id _)

seq-mod : {╬╝ ¤Ђ : Modality C D} (T : ClosedTy C) Рєњ
          ╬╝ РЅЁрхљ ¤Ђ Рєњ sРЪе ╬╝ РѕБ T РЪЕ РЅЁрхЌ╩И sРЪе ¤Ђ РѕБ T РЪЕ
seq-mod {¤Ђ = ¤Ђ} T e = РЅЁрхЌ╩И-trans (eq-mod-ty╩│ e _) (mod-cong ¤Ђ (РЅЁрхЌ╩И-trans (ty-subst-comp _ _ _) (ty-subst-cong-subst (РЌЄ-terminal _ _ _) _)))

smod-РЊю : (╬╝ : Modality D E) (¤Ђ : Modality C D) {T : ClosedTy C} Рєњ
         sРЪе ╬╝ РѕБ sРЪе ¤Ђ РѕБ T РЪЕ РЪЕ РЅЁрхЌ╩И sРЪе ╬╝ РЊю ¤Ђ РѕБ T РЪЕ
smod-РЊю ╬╝ ¤Ђ = mod-cong ╬╝ (РЅЁрхЌ╩И-trans (mod-natural ¤Ђ _) (mod-cong ¤Ђ (РЅЁрхЌ╩И-trans (ty-subst-comp _ _ _) (ty-subst-cong-subst (РЌЄ-terminal _ _ _) _))))

smtt-mod-elim : {╬Њ : Ctx E} {T : ClosedTy C} {S : ClosedTy E} (¤Ђ : Modality D E) (╬╝ : Modality C D)
                (t : SimpleTm (╬Њ ,lockРЪе ¤Ђ РЪЕ) sРЪе ╬╝ РѕБ T РЪЕ) (s : SimpleTm (╬Њ ,,РѓЏ sРЪе ¤Ђ РЊю ╬╝ РѕБ T РЪЕ) S) Рєњ
                SimpleTm ╬Њ S
smtt-mod-elim ¤Ђ ╬╝ t s = s [ id-subst _ ,РѓЏ (s╬╣РЂ╗┬╣[ smod-РЊю ¤Ђ ╬╝ ] smod-intro ¤Ђ t) ]s
